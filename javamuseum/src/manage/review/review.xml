<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="review">
    
    <typeAlias alias="review_vo" type="manage.review.ReviewVO"/>
    
      <!-- 공통조건 -->
	<sql id="searchSql">		
		<!-- WHERE 절 검색 -->
		<dynamic prepend="where">
		1=1
			<!-- 검색어 검색 -->
			<isNotEqual property="sval" compareValue="">
				<!-- 검색 타입이 all일 때 -->
				<isEqual property="stype" compareValue="all" prepend="and">
					( (name like '%$sval$%' ) or (contents like '%$sval$%' ) or (reviewtitle like '%$sval$%' ) ) 					
				</isEqual>
				<!-- 검색 타입이 all이 아닐때 해당 stype으로 검색 -->
				<isNotEqual property="stype" compareValue="all" prepend="and">
					($stype$ like '%$sval$%' )
				</isNotEqual>
			</isNotEqual>
		</dynamic>
	</sql>
	
	<select id="count" parameterClass="review_vo" resultClass="Integer">
        select count(*) from review
        <include refid="searchSql" />	
    </select>
	
	<select id="list" parameterClass="review_vo" resultClass="review_vo">
        select review.*, member.name, display.title
         from review 
         	LEFT OUTER JOIN member ON review.member_pk = member.no
         	LEFT OUTER JOIN display ON review.display_pk = display.hallnumber
        <include refid="searchSql" />
		ORDER BY review.no DESC LIMIT $startPageNo$, $pageRows$	
    </select>

    
    <insert id="insert" parameterClass="review_vo" >
        insert into review
        	( reviewtitle, contents, review_score, imagename, imagename_org, registdate)
        values
        	( #reviewtitle#, #contents#, #review_score#, #imagename#, #imagename_org#, now())
        <selectKey keyProperty="no" resultClass="Integer">
			SELECT  LAST_INSERT_ID()
		</selectKey>
    </insert>
    
    <update id="update" parameterClass="review_vo">
        update review set
        	reviewtitle=#reviewtitle#, contents=#contents#, review_score=#review_score#
        <isNotEqual property="registdate" compareValue="">
       	    registdate = #registdate#,
       	</isNotEqual>  
       	<isEqual property="imagename_chk" compareValue="1">
        	imagename='', imagename_org='',
        </isEqual>
        <isNotEqual property="imagename" compareValue="">
            <isNotNull property="imagename">
        		imagename=#imagename#, imagename_org=#imagename_org#, 
        	</isNotNull>
       	</isNotEqual>
        where no=#no#
    </update>
    
    <delete id="delete" parameterClass="Integer">
        delete from review where no=#no#
    </delete>
    
    <select id="read" parameterClass="review_vo" resultClass="review_vo">
        select review.*	, member.name , display.title
         from review, member, display where review.member_pk = member.no and review.display_pk = display.hallnumber and review.no=#no#
    </select>
    

    
</sqlMap>